class Solution {
  private:
  int lcsHelper(string &s,string &snew)
  {
      int n = s.size();
      int m = snew.size();
      
      vector<vector<int>> dp(n+1,vector<int> (m+1,0));
      
      for(int i=1;i<n+1;i++)
      {
          for(int j=1;j<m+1;j++)
          {
              if(s[i-1] == snew[j-1] && i!=j)
              {
                  dp[i][j] = 1+dp[i-1][j-1];
              }
              else
              dp[i][j] = max(dp[i-1][j],dp[i][j-1]);
          }
      }
      
      return dp[n][m];
  }
  public:
    int LongestRepeatingSubsequence(string &s) {
        // Code here
        
        string snew = s;
        int ans = lcsHelper(s,snew);
        return ans;
         
    }
};
