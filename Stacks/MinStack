class MinStack {
    private:
    stack<long long> st;   
    long long minV;
public:
    MinStack() {
        
         minV = LLONG_MAX;
    }
    
    void push(int val) {
        if(st.empty()) 
        {
            st.push(val);
            minV = val;
        }
        else
        {
            long long n = st.top();
            if(val>=minV) st.push(val);
            else
            {
                st.push(2LL*val-minV);
                minV = val;
            }
        }
    }
    
    void pop() {
        if(st.empty()) return;
        else
        {
            long long n = st.top();
            if(n>=minV) st.pop();
            else
            {
                minV = 2LL*minV-n;
                st.pop();
            }
        }
    }
    
    int top() {
        long long n = st.top();
        if(n>minV) return (int)n;
        else
        return (int)minV;
        }
    
    int getMin() {
        return (int)minV;
    }
};

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack* obj = new MinStack();
 * obj->push(val);
 * obj->pop();
 * int param_3 = obj->top();
 * int param_4 = obj->getMin();
 */
